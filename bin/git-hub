#!/usr/bin/env bash

################################################################################
# name: git-hub
# what: control your github.com (or enterprise) repo from the command-line
################################################################################
# copyright (c) 2012 Wil Moore III <wil.moore@wilmoore.com>

################################################################################
# "Be conservative in what you do; be liberal in which you accept from others."
################################################################################

set -e
set -o errexit
set -o errtrace

################################################################################
# command-line options
################################################################################

LONG_USAGE='control your github.com (or enterprise) repo from the command-line.'
OPTIONS_SPEC="\
git hub <command>
git hub [-f | --force-origin] <command>

COMMANDS

contributors          go to contributors list.
issues                go to issue tracker.
pull-request          new pull request from current branch.
stargazers            go to stargazers list.
wiki                  go to wiki pages.

OPTIONS
--
f,force-origin  force the use of 'origin' rather than 'upstream'.
"

################################################################################
# NOT RECOMMENDED TO MODIFY UNLESS YOU KNOW EXACTLY WHAT YOU ARE DOING!
################################################################################

# program version
VERSION=0.0.2

# run from a subdirectory
SUBDIRECTORY_OK=Yes

################################################################################
# bootstrap
################################################################################

. git-sh-setup
. git-sh-i18n

# require a working tree
require_work_tree_exists

# current git branch [or is this better?: $(git symbolic-ref -q HEAD)]
CURRENT_BRANCH=$(git describe --contains --all HEAD)

# force use of origin remote?
for opt; do
  case "$opt" in
    -f|--force-origin)
      FORCE_ORIGIN=1
      shift
      break
      ;;
    *)
      FORCE_ORIGIN=0
      break
      ;;
  esac
done

################################################################################
# parameter handling
################################################################################

shift

################################################################################
# helpers
################################################################################

upstream_url() {
  local URL=$(git config --get remote.upstream.url)
  echo $(echo ${URL} | tr ':' '/' | sed -e 's@.git$@@' -e 's/^[^@]*@//')
}

origin_url() {
  local URL=$(git config --get remote.origin.url)
  echo $(echo ${URL} | tr ':' '/' | sed -e 's@.git$@@' -e 's/^[^@]*@//')
}

upstream_or_origin() {
  if [ ! -z "$(upstream_url)" ]; then
    echo $(upstream_url)
  else
    echo $(origin_url)
  fi
}

################################################################################
# commands
################################################################################

if [[ $1 == "contributors" ]]; then
  if [[ $FORCE_ORIGIN -eq 1 ]]; then
    open http://$(origin_url)/graphs/contributors
  else
    open http://$(upstream_or_origin)/graphs/contributors
  fi

  exit 0
fi

if [[ $1 == "issues" ]]; then
  if [[ $FORCE_ORIGIN -eq 1 ]]; then
    open http://$(origin_url)/issues
  else
    open http://$(upstream_or_origin)/issues
  fi

  exit 0
fi

if [[ $1 == "pull-request" ]]; then
  if [[ $(git branch --remotes | grep -P "origin/$CURRENT_BRANCH$") ]]; then
    # if we are on a branch and it exists on origin, issue pull request against it
    open http://$(origin_url)/pull/new/$CURRENT_BRANCH
  else
    # otherwise, issue a blank pull request
    open http://$(origin_url)/pull/new
  fi

  exit 0
fi

if [[ $1 == "stargazers" ]]; then
  if [[ $FORCE_ORIGIN -eq 1 ]]; then
    open http://$(origin_url)/stargazers
  else
    open http://$(upstream_or_origin)/stargazers
  fi

  exit 0
fi

if [[ $1 == "wiki" ]]; then
  if [[ $FORCE_ORIGIN -eq 1 ]]; then
    open http://$(origin_url)/wiki
  else
    open http://$(upstream_or_origin)/wiki
  fi

  exit 0
fi

if [[ $FORCE_ORIGIN -eq 1 ]]; then
  if [ ! -z "$CURRENT_BRANCH" ]; then
    open http://$(origin_url)/tree/$CURRENT_BRANCH
  else
    open http://$(origin_url)
  fi
else
  if [ ! -z "$CURRENT_BRANCH" ]; then
    open http://$(upstream_or_origin)/tree/$CURRENT_BRANCH
  else
    open http://$(upstream_or_origin)
  fi
fi

exit 0
